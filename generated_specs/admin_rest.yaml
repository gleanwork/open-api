openapi: 3.0.0
info:
  version: 0.9.0
  title: Glean Rest Admin API
  contact:
    email: support@glean.com
  description: |
    # Introduction
    These are all the APIs exposed to the users through an auth token to utilize certain admin
    operations. These offer limited exposure to the admin APIs through rest endpoints.
  x-logo:
    url: https://app.glean.com/images/glean-text2.svg
servers:
  - url: https://{instance}-be.glean.com
    variables:
      instance:
        default: instance-name
        description: The instance name (typically the email domain without the TLD) that determines the deployment backend.
security:
  - APIToken: []
paths:
  /rest/api/v1/governance/data/policies/{id}:
    get:
      description: Fetches the specified policy version, or the latest if no version is provided.
      summary: Gets specified Policy.
      operationId: getpolicy
      x-visibility: Public
      tags:
        - Governance
      parameters:
        - name: id
          in: path
          description: The id of the policy to fetch.
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: The version of the policy to fetch. Each time a policy is updated, the older version is still stored. If this is left empty, the latest policy is fetched.
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDlpReportResponse"
        "403":
          description: Permissions error
        "500":
          description: Internal error
    post:
      description: Updates an existing policy.
      summary: Updates an existing policy.
      operationId: updatepolicy
      tags:
        - Governance
      parameters:
        - name: id
          in: path
          description: The id of the policy to fetch.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; charset=UTF-8:
            schema:
              $ref: "#/components/schemas/UpdateDlpReportRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/UpdateDlpReportResponse"
        "403":
          description: Permissions error
        "500":
          description: Internal error
  /rest/api/v1/governance/data/policies:
    get:
      description: Lists policies with filtering.
      summary: Lists policies.
      operationId: listpolicies
      x-visibility: Public
      tags:
        - Governance
      parameters:
        - name: autoHide
          in: query
          description: Filter to return reports with a given value of auto-hide.
          required: false
          schema:
            type: boolean
        - name: frequency
          in: query
          description: Filter to return reports with a given frequency.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDlpReportsResponse"
        "403":
          description: Permissions error
        "500":
          description: Internal error
    post:
      description: Creates a new policy with specified specifications and returns its id.
      summary: Creates new policy.
      operationId: createpolicy
      x-visibility: Public
      tags:
        - Governance
      requestBody:
        content:
          application/json; charset=UTF-8:
            schema:
              $ref: "#/components/schemas/CreateDlpReportRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/CreateDlpReportResponse"
        "403":
          description: Permissions error
        "500":
          description: Internal error
  /rest/api/v1/governance/data/policies/{id}/download:
    get:
      description: Downloads CSV violations report for a specific policy id. This does not support continuous policies.
      summary: Downloads violations CSV for policy.
      operationId: downloadpolicycsv
      x-visibility: Public
      tags:
        - Governance
      parameters:
        - name: id
          in: path
          description: The id of the policy to download violations for.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Downloads csv of batch policy violations.
          content:
            text/csv; charset=UTF-8:
              schema:
                description: CSV of all the violations found for this policy.
                type: string
        "403":
          description: Permissions error
        "500":
          description: Internal error
  /rest/api/v1/governance/data/reports:
    post:
      description: Creates a new one-time report and executes its batch job.
      summary: Creates new one-time report.
      operationId: createreport
      x-visibility: Public
      tags:
        - Governance
      requestBody:
        content:
          application/json; charset=UTF-8:
            schema:
              $ref: "#/components/schemas/UpdateDlpConfigRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/UpdateDlpConfigResponse"
        "403":
          description: Permissions error
        "500":
          description: Internal error
  /rest/api/v1/governance/data/reports/{id}/download:
    get:
      description: Downloads CSV violations report for a specific report id.
      summary: Downloads violations CSV for report.
      operationId: downloadreportcsv
      x-visibility: Public
      tags:
        - Governance
      parameters:
        - name: id
          in: path
          description: The id of the report to download violations for.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Downloads csv of one-time report violations.
          content:
            text/csv; charset=UTF-8:
              schema:
                description: CSV of all the violations found for this report.
                type: string
        "403":
          description: Permissions error
        "500":
          description: Internal error
  /rest/api/v1/governance/data/reports/{id}/status:
    get:
      description: Fetches the status of the run corresponding to the report-id.
      summary: Fetches report run status.
      operationId: getreportstatus
      x-visibility: Public
      tags:
        - Governance
      parameters:
        - name: id
          in: path
          description: The id of the report to get run status for.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Fetches status of report run.
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/ReportStatusResponse"
        "403":
          description: Permissions error
        "500":
          description: Internal error
  /rest/api/v1/governance/documents/visibilityoverrides:
    get:
      description: Fetches the visibility override status of the documents passed.
      summary: Fetches documents visibility.
      operationId: getdocvisibility
      x-visibility: Public
      tags:
        - Governance
      parameters:
        - name: docIds
          in: query
          description: List of doc-ids which will have their hide status fetched.
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: The visibility status of documents
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/GetDocumentVisibilityOverridesResponse"
        "403":
          description: Permissions error
        "500":
          description: Internal error
    post:
      description: Sets the visibility-override state of the documents specified, effectively hiding or un-hiding documents.
      summary: Hide/Un-hide docs.
      operationId: setdocvisibility
      x-visibility: Public
      tags:
        - Governance
      requestBody:
        content:
          application/json; charset=UTF-8:
            schema:
              $ref: "#/components/schemas/UpdateDocumentVisibilityOverridesRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/UpdateDocumentVisibilityOverridesResponse"
        "403":
          description: Permissions error
        "500":
          description: Internal error
components:
  schemas:
    SensitiveInfoType:
      properties:
        likelihoodThreshold:
          deprecated: true
          type: string
          enum:
            - LIKELY
            - VERY_LIKELY
        infoType:
          description: Text representation of an info-type to scan for.
          type: string
    TimeRange:
      properties:
        startTime:
          type: string
          description: start time of the time range, applicable for the CUSTOM type.
          format: date-time
        endTime:
          type: string
          description: end time of the time range, applicable for the CUSTOM type.
          format: date-time
    InputOptions:
      description: Controls which data-sources and what time-range to include in scans.
      properties:
        urlGreenlist:
          deprecated: true
          type: array
          description: list of url regex matching documents excluded from report
          items:
            type: string
        datasourcesType:
          type: string
          description: The types of datasource for which to run the report/policy.
          enum:
            - ALL
            - CUSTOM
        datasources:
          deprecated: true
          type: array
          description: List of datasources to consider for report. DEPRECATED - use datasourceInstances instead.
          items:
            type: string
        datasourceInstances:
          type: array
          description: List of datasource instances to consider for report/policy.
          items:
            type: string
        timePeriodType:
          type: string
          description: Type of time period for which to run the report/policy. PAST_DAY is deprecated.
          enum:
            - ALL_TIME
            - PAST_YEAR
            - PAST_DAY
            - CUSTOM
        customTimeRange:
          $ref: "#/components/schemas/TimeRange"
    SharingOptions:
      description: Controls how "shared" a document must be to get picked for scans.
      properties:
        enabled:
          deprecated: true
          type: boolean
        threshold:
          description: The minimum number of users the document is shared with.
          type: integer
        thresholdEnabled:
          description: Documents will be filtered based on how many people have access to it.
          type: boolean
        anyoneWithLinkEnabled:
          deprecated: true
          type: boolean
        anyoneInternalEnabled:
          description: Only users within the organization can access the document.
          type: boolean
        anonymousAccessEnabled:
          description: Anyone on the internet can access the document.
          type: boolean
        userAccessEnabled:
          description: Enable user access check
          type: boolean
        userIds:
          type: array
          description: Any one of the specified users can access the document.
          items:
            type: string
    ExternalSharingOptions:
      deprecated: true
      allOf:
        - description: DEPRECATED - use `broadSharingOptions` instead.
        - $ref: "#/components/schemas/SharingOptions"
        - type: object
          properties:
            domainAccessEnabled:
              type: boolean
    HotwordProximity:
      properties:
        windowBefore:
          type: integer
        windowAfter:
          type: integer
    Hotword:
      properties:
        regex:
          type: string
        proximity:
          $ref: "#/components/schemas/HotwordProximity"
    SensitiveExpression:
      properties:
        expression:
          description: Sensitive word, phrase, or regular expression.
          type: string
        hotwords:
          description: Zero to three proximate regular expressions necessary to consider an expression as sensitive content.
          type: array
          items:
            $ref: "#/components/schemas/Hotword"
    SensitiveContentOptions:
      description: Options for defining sensitive content within scanned documents.
      properties:
        sensitiveInfoTypes:
          description: Predefined categories of terms to consider as sensitive content. See https://cloud.google.com/dlp/docs/infotypes-reference for available types.
          type: array
          items:
            $ref: "#/components/schemas/SensitiveInfoType"
        sensitiveTerms:
          description: list of words and phrases to consider as sensitive content
          type: array
          items:
            $ref: "#/components/schemas/SensitiveExpression"
        sensitiveRegexes:
          description: list of regular expressions to consider as sensitive content
          type: array
          items:
            $ref: "#/components/schemas/SensitiveExpression"
    DlpPersonMetadata:
      properties:
        firstName:
          type: string
          description: The first name of the person
        email:
          type: string
          description: The user's primary email address
    DlpPerson:
      description: Details about the person who created this report/policy.
      required:
        - name
        - obfuscatedId
      properties:
        name:
          type: string
          description: The display name.
        obfuscatedId:
          type: string
          description: An opaque identifier that can be used to request metadata for a Person.
        metadata:
          $ref: "#/components/schemas/DlpPersonMetadata"
    AllowlistOptions:
      description: Terms that are allow-listed during the scans. If any finding picked up by a rule exactly matches a term in the allow-list, it will not be counted as a violation.
      properties:
        terms:
          type: array
          description: list of words and phrases to consider as whitelisted content
          items:
            type: string
    DlpConfig:
      description: Detailed configuration of what documents and sensitive content will be scanned.
      properties:
        version:
          description: Synonymous with report/policy id.
          type: integer
          format: int64
        sensitiveInfoTypes:
          deprecated: true
          description: DEPRECATED - use `sensitiveContentOptions` instead.
          type: array
          items:
            $ref: "#/components/schemas/SensitiveInfoType"
        inputOptions:
          description: Options for documents to include or exclude in a report
          $ref: "#/components/schemas/InputOptions"
        externalSharingOptions:
          deprecated: true
          description: DEPRECATED - use `broadSharingOptions` instead.
          $ref: "#/components/schemas/ExternalSharingOptions"
        broadSharingOptions:
          description: Options for defining documents to scan for sensitive content.
          $ref: "#/components/schemas/SharingOptions"
        sensitiveContentOptions:
          description: Options for defining sensitive content within scanned documents.
          $ref: "#/components/schemas/SensitiveContentOptions"
        reportName:
          type: string
        frequency:
          description: Interval between scans.
          type: string
        createdBy:
          description: Person who created this report/policy.
          $ref: "#/components/schemas/DlpPerson"
        createdAt:
          description: Timestamp at which this configuration was created.
          type: string
          format: iso-date-time
        redactQuote:
          description: redact quote in findings of the report
          type: boolean
        autoHideDocs:
          description: auto hide documents with findings in the report
          type: boolean
        allowlistOptions:
          description: Options for defining whitelisting content within scanned documents
          $ref: "#/components/schemas/AllowlistOptions"
    DlpFrequency:
      type: string
      description: Interval between scans. DAILY is deprecated.
      x-include-enum-class-prefix: true
      enum:
        - ONCE
        - DAILY
        - WEEKLY
        - CONTINUOUS
        - NONE
    DlpReportStatus:
      type: string
      description: The status of the policy/report. Only ACTIVE status will be picked for scans.
      x-include-enum-class-prefix: true
      enum:
        - ACTIVE
        - INACTIVE
        - CANCELLED
        - NONE
    DlpReport:
      description: Full policy information that will be used for scans.
      properties:
        id:
          type: string
        name:
          type: string
        config:
          description: All details of the policy that is needed for a scan.
          $ref: "#/components/schemas/DlpConfig"
        frequency:
          description: The interval between scans.
          $ref: "#/components/schemas/DlpFrequency"
        status:
          description: The status of the policy.
          $ref: "#/components/schemas/DlpReportStatus"
        createdBy:
          description: Person who created this report.
          $ref: "#/components/schemas/DlpPerson"
        createdAt:
          description: Timestamp at which the policy was created.
          type: string
          format: iso-date-time
        lastUpdatedAt:
          description: Timestamp at which the policy was last updated.
          type: string
          format: iso-date-time
        autoHideDocs:
          description: Auto hide documents with findings in the policy.
          type: boolean
        lastScanStatus:
          type: string
          enum:
            - PENDING
            - SUCCESS
            - FAILURE
            - CANCELLED
            - CANCELLING
            - ACTIVE
        lastScanStartTime:
          description: The timestamp at which the report's last run/scan began.
          type: string
          format: iso-date-time
        updatedBy:
          description: Person who last updated this report.
          $ref: "#/components/schemas/DlpPerson"
    GetDlpReportResponse:
      properties:
        report:
          $ref: "#/components/schemas/DlpReport"
    UpdateDlpReportRequest:
      properties:
        config:
          description: The new configuration the policy will follow if provided.
          $ref: "#/components/schemas/DlpConfig"
        frequency:
          description: The new frequency the policy will follow if provided.
          $ref: "#/components/schemas/DlpFrequency"
        status:
          description: The new status the policy will be updated to if provided.
          $ref: "#/components/schemas/DlpReportStatus"
        autoHideDocs:
          description: The new autoHideDoc boolean the policy will be updated to if provided.
          type: boolean
        reportName:
          description: The new name of the policy if provided.
          type: string
    DlpSimpleResult:
      type: string
      enum:
        - SUCCESS
        - FAILURE
    UpdateDlpReportResponse:
      properties:
        result:
          $ref: "#/components/schemas/DlpSimpleResult"
    ListDlpReportsResponse:
      properties:
        reports:
          type: array
          items:
            $ref: "#/components/schemas/DlpReport"
    CreateDlpReportRequest:
      properties:
        name:
          description: Name of the policy being created.
          type: string
        config:
          description: Details on the configuration used in the scans.
          $ref: "#/components/schemas/DlpConfig"
        frequency:
          description: Interval between scans.
          $ref: "#/components/schemas/DlpFrequency"
        autoHideDocs:
          description: Controls whether the policy should hide documents with violations.
          type: boolean
    CreateDlpReportResponse:
      properties:
        report:
          $ref: "#/components/schemas/DlpReport"
    UpdateDlpConfigRequest:
      properties:
        config:
          $ref: "#/components/schemas/DlpConfig"
        frequency:
          description: Only "ONCE" is supported for reports.
          type: string
    UpdateDlpConfigResponse:
      properties:
        result:
          $ref: "#/components/schemas/DlpSimpleResult"
        reportId:
          description: The id of the report that was just created and run.
          type: string
    ReportStatusResponse:
      properties:
        status:
          type: string
          enum:
            - PENDING
            - SUCCESS
            - FAILURE
            - CANCELLED
            - CANCELLING
            - ACTIVE
        startTime:
          description: The timestamp at which the report's run/scan began.
          type: string
          format: iso-date-time
    DocumentVisibilityOverride:
      properties:
        docId:
          type: string
        override:
          description: The visibility-override state of the document.
          type: string
          enum:
            - NONE
            - HIDE_FROM_ALL
            - HIDE_FROM_GROUPS
            - HIDE_FROM_ALL_EXCEPT_OWNER
    GetDocumentVisibilityOverridesResponse:
      properties:
        visibilityOverrides:
          type: array
          items:
            $ref: "#/components/schemas/DocumentVisibilityOverride"
    UpdateDocumentVisibilityOverridesRequest:
      properties:
        visibilityOverrides:
          type: array
          items:
            $ref: "#/components/schemas/DocumentVisibilityOverride"
    DocumentVisibilityUpdateResult:
      allOf:
        - $ref: "#/components/schemas/DocumentVisibilityOverride"
        - type: object
          properties:
            success:
              description: Whether this document was successfully set to its desired visibility state.
              type: boolean
    UpdateDocumentVisibilityOverridesResponse:
      properties:
        results:
          description: The documents and whether their visibility was successfully updated.
          type: array
          items:
            $ref: "#/components/schemas/DocumentVisibilityUpdateResult"
